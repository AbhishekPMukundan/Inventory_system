// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: inventory/inventorypb/inventory.proto

package inventorypb

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Inventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Barcode     string `protobuf:"bytes,2,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Store       string `protobuf:"bytes,3,opt,name=store,proto3" json:"store,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Category    string `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Image       string `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
	Restricted  bool   `protobuf:"varint,8,opt,name=restricted,proto3" json:"restricted,omitempty"`
	Inventory   int32  `protobuf:"varint,9,opt,name=inventory,proto3" json:"inventory,omitempty"`
	Msrp        string `protobuf:"bytes,10,opt,name=msrp,proto3" json:"msrp,omitempty"`
	Price       string `protobuf:"bytes,11,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Inventory) Reset() {
	*x = Inventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory) ProtoMessage() {}

func (x *Inventory) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory.ProtoReflect.Descriptor instead.
func (*Inventory) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{0}
}

func (x *Inventory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Inventory) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *Inventory) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *Inventory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Inventory) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Inventory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Inventory) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Inventory) GetRestricted() bool {
	if x != nil {
		return x.Restricted
	}
	return false
}

func (x *Inventory) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *Inventory) GetMsrp() string {
	if x != nil {
		return x.Msrp
	}
	return ""
}

func (x *Inventory) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type CreateInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *Inventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *CreateInventoryRequest) Reset() {
	*x = CreateInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInventoryRequest) ProtoMessage() {}

func (x *CreateInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInventoryRequest.ProtoReflect.Descriptor instead.
func (*CreateInventoryRequest) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{1}
}

func (x *CreateInventoryRequest) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type CreateInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *Inventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *CreateInventoryResponse) Reset() {
	*x = CreateInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInventoryResponse) ProtoMessage() {}

func (x *CreateInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInventoryResponse.ProtoReflect.Descriptor instead.
func (*CreateInventoryResponse) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{2}
}

func (x *CreateInventoryResponse) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type ReadInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryId string `protobuf:"bytes,1,opt,name=inventory_id,json=inventoryId,proto3" json:"inventory_id,omitempty"`
}

func (x *ReadInventoryRequest) Reset() {
	*x = ReadInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInventoryRequest) ProtoMessage() {}

func (x *ReadInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInventoryRequest.ProtoReflect.Descriptor instead.
func (*ReadInventoryRequest) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{3}
}

func (x *ReadInventoryRequest) GetInventoryId() string {
	if x != nil {
		return x.InventoryId
	}
	return ""
}

type ReadInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *Inventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *ReadInventoryResponse) Reset() {
	*x = ReadInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInventoryResponse) ProtoMessage() {}

func (x *ReadInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInventoryResponse.ProtoReflect.Descriptor instead.
func (*ReadInventoryResponse) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{4}
}

func (x *ReadInventoryResponse) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type UpdateInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *Inventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *UpdateInventoryRequest) Reset() {
	*x = UpdateInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryRequest) ProtoMessage() {}

func (x *UpdateInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateInventoryRequest) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateInventoryRequest) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type UpdateInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *Inventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *UpdateInventoryResponse) Reset() {
	*x = UpdateInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryResponse) ProtoMessage() {}

func (x *UpdateInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateInventoryResponse) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateInventoryResponse) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type DeleteInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryId string `protobuf:"bytes,1,opt,name=inventory_id,json=inventoryId,proto3" json:"inventory_id,omitempty"`
}

func (x *DeleteInventoryRequest) Reset() {
	*x = DeleteInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInventoryRequest) ProtoMessage() {}

func (x *DeleteInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInventoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteInventoryRequest) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteInventoryRequest) GetInventoryId() string {
	if x != nil {
		return x.InventoryId
	}
	return ""
}

type DeleteInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryId string `protobuf:"bytes,1,opt,name=inventory_id,json=inventoryId,proto3" json:"inventory_id,omitempty"`
}

func (x *DeleteInventoryResponse) Reset() {
	*x = DeleteInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInventoryResponse) ProtoMessage() {}

func (x *DeleteInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInventoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteInventoryResponse) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteInventoryResponse) GetInventoryId() string {
	if x != nil {
		return x.InventoryId
	}
	return ""
}

type ListInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListInventoryRequest) Reset() {
	*x = ListInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInventoryRequest) ProtoMessage() {}

func (x *ListInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInventoryRequest.ProtoReflect.Descriptor instead.
func (*ListInventoryRequest) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{9}
}

type ListInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *Inventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *ListInventoryResponse) Reset() {
	*x = ListInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inventory_inventorypb_inventory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInventoryResponse) ProtoMessage() {}

func (x *ListInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_inventorypb_inventory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInventoryResponse.ProtoReflect.Descriptor instead.
func (*ListInventoryResponse) Descriptor() ([]byte, []int) {
	return file_inventory_inventorypb_inventory_proto_rawDescGZIP(), []int{10}
}

func (x *ListInventoryResponse) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

var File_inventory_inventorypb_inventory_proto protoreflect.FileDescriptor

var file_inventory_inventorypb_inventory_proto_rawDesc = []byte{
	0x0a, 0x25, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x9b, 0x02, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x73, 0x72, 0x70, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x73, 0x72, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x4c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x4d,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x39, 0x0a,
	0x14, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x4c, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x22, 0x4d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x3b, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x32, 0xca, 0x03, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1f, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42,
	0x0d, 0x5a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inventory_inventorypb_inventory_proto_rawDescOnce sync.Once
	file_inventory_inventorypb_inventory_proto_rawDescData = file_inventory_inventorypb_inventory_proto_rawDesc
)

func file_inventory_inventorypb_inventory_proto_rawDescGZIP() []byte {
	file_inventory_inventorypb_inventory_proto_rawDescOnce.Do(func() {
		file_inventory_inventorypb_inventory_proto_rawDescData = protoimpl.X.CompressGZIP(file_inventory_inventorypb_inventory_proto_rawDescData)
	})
	return file_inventory_inventorypb_inventory_proto_rawDescData
}

var file_inventory_inventorypb_inventory_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_inventory_inventorypb_inventory_proto_goTypes = []interface{}{
	(*Inventory)(nil),               // 0: inventory.Inventory
	(*CreateInventoryRequest)(nil),  // 1: inventory.CreateInventoryRequest
	(*CreateInventoryResponse)(nil), // 2: inventory.CreateInventoryResponse
	(*ReadInventoryRequest)(nil),    // 3: inventory.ReadInventoryRequest
	(*ReadInventoryResponse)(nil),   // 4: inventory.ReadInventoryResponse
	(*UpdateInventoryRequest)(nil),  // 5: inventory.updateInventoryRequest
	(*UpdateInventoryResponse)(nil), // 6: inventory.UpdateInventoryResponse
	(*DeleteInventoryRequest)(nil),  // 7: inventory.DeleteInventoryRequest
	(*DeleteInventoryResponse)(nil), // 8: inventory.DeleteInventoryResponse
	(*ListInventoryRequest)(nil),    // 9: inventory.ListInventoryRequest
	(*ListInventoryResponse)(nil),   // 10: inventory.ListInventoryResponse
}
var file_inventory_inventorypb_inventory_proto_depIdxs = []int32{
	0,  // 0: inventory.CreateInventoryRequest.inventory:type_name -> inventory.Inventory
	0,  // 1: inventory.CreateInventoryResponse.inventory:type_name -> inventory.Inventory
	0,  // 2: inventory.ReadInventoryResponse.inventory:type_name -> inventory.Inventory
	0,  // 3: inventory.updateInventoryRequest.inventory:type_name -> inventory.Inventory
	0,  // 4: inventory.UpdateInventoryResponse.inventory:type_name -> inventory.Inventory
	0,  // 5: inventory.ListInventoryResponse.inventory:type_name -> inventory.Inventory
	1,  // 6: inventory.InventoryService.CreateInventory:input_type -> inventory.CreateInventoryRequest
	3,  // 7: inventory.InventoryService.ReadInventory:input_type -> inventory.ReadInventoryRequest
	5,  // 8: inventory.InventoryService.UpdateInventory:input_type -> inventory.updateInventoryRequest
	7,  // 9: inventory.InventoryService.DeleteInventory:input_type -> inventory.DeleteInventoryRequest
	9,  // 10: inventory.InventoryService.ListInventory:input_type -> inventory.ListInventoryRequest
	2,  // 11: inventory.InventoryService.CreateInventory:output_type -> inventory.CreateInventoryResponse
	4,  // 12: inventory.InventoryService.ReadInventory:output_type -> inventory.ReadInventoryResponse
	6,  // 13: inventory.InventoryService.UpdateInventory:output_type -> inventory.UpdateInventoryResponse
	8,  // 14: inventory.InventoryService.DeleteInventory:output_type -> inventory.DeleteInventoryResponse
	10, // 15: inventory.InventoryService.ListInventory:output_type -> inventory.ListInventoryResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_inventory_inventorypb_inventory_proto_init() }
func file_inventory_inventorypb_inventory_proto_init() {
	if File_inventory_inventorypb_inventory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inventory_inventorypb_inventory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inventory_inventorypb_inventory_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inventory_inventorypb_inventory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inventory_inventorypb_inventory_proto_goTypes,
		DependencyIndexes: file_inventory_inventorypb_inventory_proto_depIdxs,
		MessageInfos:      file_inventory_inventorypb_inventory_proto_msgTypes,
	}.Build()
	File_inventory_inventorypb_inventory_proto = out.File
	file_inventory_inventorypb_inventory_proto_rawDesc = nil
	file_inventory_inventorypb_inventory_proto_goTypes = nil
	file_inventory_inventorypb_inventory_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// InventoryServiceClient is the client API for InventoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InventoryServiceClient interface {
	CreateInventory(ctx context.Context, in *CreateInventoryRequest, opts ...grpc.CallOption) (*CreateInventoryResponse, error)
	ReadInventory(ctx context.Context, in *ReadInventoryRequest, opts ...grpc.CallOption) (*ReadInventoryResponse, error)
	UpdateInventory(ctx context.Context, in *UpdateInventoryRequest, opts ...grpc.CallOption) (*UpdateInventoryResponse, error)
	DeleteInventory(ctx context.Context, in *DeleteInventoryRequest, opts ...grpc.CallOption) (*DeleteInventoryResponse, error)
	ListInventory(ctx context.Context, in *ListInventoryRequest, opts ...grpc.CallOption) (InventoryService_ListInventoryClient, error)
}

type inventoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInventoryServiceClient(cc grpc.ClientConnInterface) InventoryServiceClient {
	return &inventoryServiceClient{cc}
}

func (c *inventoryServiceClient) CreateInventory(ctx context.Context, in *CreateInventoryRequest, opts ...grpc.CallOption) (*CreateInventoryResponse, error) {
	out := new(CreateInventoryResponse)
	err := c.cc.Invoke(ctx, "/inventory.InventoryService/CreateInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inventoryServiceClient) ReadInventory(ctx context.Context, in *ReadInventoryRequest, opts ...grpc.CallOption) (*ReadInventoryResponse, error) {
	out := new(ReadInventoryResponse)
	err := c.cc.Invoke(ctx, "/inventory.InventoryService/ReadInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inventoryServiceClient) UpdateInventory(ctx context.Context, in *UpdateInventoryRequest, opts ...grpc.CallOption) (*UpdateInventoryResponse, error) {
	out := new(UpdateInventoryResponse)
	err := c.cc.Invoke(ctx, "/inventory.InventoryService/UpdateInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inventoryServiceClient) DeleteInventory(ctx context.Context, in *DeleteInventoryRequest, opts ...grpc.CallOption) (*DeleteInventoryResponse, error) {
	out := new(DeleteInventoryResponse)
	err := c.cc.Invoke(ctx, "/inventory.InventoryService/DeleteInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inventoryServiceClient) ListInventory(ctx context.Context, in *ListInventoryRequest, opts ...grpc.CallOption) (InventoryService_ListInventoryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_InventoryService_serviceDesc.Streams[0], "/inventory.InventoryService/ListInventory", opts...)
	if err != nil {
		return nil, err
	}
	x := &inventoryServiceListInventoryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type InventoryService_ListInventoryClient interface {
	Recv() (*ListInventoryResponse, error)
	grpc.ClientStream
}

type inventoryServiceListInventoryClient struct {
	grpc.ClientStream
}

func (x *inventoryServiceListInventoryClient) Recv() (*ListInventoryResponse, error) {
	m := new(ListInventoryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// InventoryServiceServer is the server API for InventoryService service.
type InventoryServiceServer interface {
	CreateInventory(context.Context, *CreateInventoryRequest) (*CreateInventoryResponse, error)
	ReadInventory(context.Context, *ReadInventoryRequest) (*ReadInventoryResponse, error)
	UpdateInventory(context.Context, *UpdateInventoryRequest) (*UpdateInventoryResponse, error)
	DeleteInventory(context.Context, *DeleteInventoryRequest) (*DeleteInventoryResponse, error)
	ListInventory(*ListInventoryRequest, InventoryService_ListInventoryServer) error
}

// UnimplementedInventoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInventoryServiceServer struct {
}

func (*UnimplementedInventoryServiceServer) CreateInventory(context.Context, *CreateInventoryRequest) (*CreateInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInventory not implemented")
}
func (*UnimplementedInventoryServiceServer) ReadInventory(context.Context, *ReadInventoryRequest) (*ReadInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadInventory not implemented")
}
func (*UnimplementedInventoryServiceServer) UpdateInventory(context.Context, *UpdateInventoryRequest) (*UpdateInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInventory not implemented")
}
func (*UnimplementedInventoryServiceServer) DeleteInventory(context.Context, *DeleteInventoryRequest) (*DeleteInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInventory not implemented")
}
func (*UnimplementedInventoryServiceServer) ListInventory(*ListInventoryRequest, InventoryService_ListInventoryServer) error {
	return status.Errorf(codes.Unimplemented, "method ListInventory not implemented")
}

func RegisterInventoryServiceServer(s *grpc.Server, srv InventoryServiceServer) {
	s.RegisterService(&_InventoryService_serviceDesc, srv)
}

func _InventoryService_CreateInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServiceServer).CreateInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.InventoryService/CreateInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServiceServer).CreateInventory(ctx, req.(*CreateInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InventoryService_ReadInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServiceServer).ReadInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.InventoryService/ReadInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServiceServer).ReadInventory(ctx, req.(*ReadInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InventoryService_UpdateInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServiceServer).UpdateInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.InventoryService/UpdateInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServiceServer).UpdateInventory(ctx, req.(*UpdateInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InventoryService_DeleteInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServiceServer).DeleteInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.InventoryService/DeleteInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServiceServer).DeleteInventory(ctx, req.(*DeleteInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InventoryService_ListInventory_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListInventoryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InventoryServiceServer).ListInventory(m, &inventoryServiceListInventoryServer{stream})
}

type InventoryService_ListInventoryServer interface {
	Send(*ListInventoryResponse) error
	grpc.ServerStream
}

type inventoryServiceListInventoryServer struct {
	grpc.ServerStream
}

func (x *inventoryServiceListInventoryServer) Send(m *ListInventoryResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _InventoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inventory.InventoryService",
	HandlerType: (*InventoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateInventory",
			Handler:    _InventoryService_CreateInventory_Handler,
		},
		{
			MethodName: "ReadInventory",
			Handler:    _InventoryService_ReadInventory_Handler,
		},
		{
			MethodName: "UpdateInventory",
			Handler:    _InventoryService_UpdateInventory_Handler,
		},
		{
			MethodName: "DeleteInventory",
			Handler:    _InventoryService_DeleteInventory_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListInventory",
			Handler:       _InventoryService_ListInventory_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "inventory/inventorypb/inventory.proto",
}
